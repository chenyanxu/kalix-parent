<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.kalix</groupId>
    <artifactId>kalix-parent</artifactId>
    <name>Kalix Parent</name>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <properties>
        <globle.version>1.0.0-SNAPSHOT</globle.version>
        <!--some example OSGi runtime properties-->
        <org.osgi.service.http.port>8080</org.osgi.service.http.port>
        <org.osgi.service.http.port.secure>8443</org.osgi.service.http.port.secure>
        <org.osgi.core.version>6.0.0</org.osgi.core.version>
        <org.osgi.compendium.version>5.0.0</org.osgi.compendium.version>
        <org.osgi.enterprise.version>5.0.0</org.osgi.enterprise.version>

        <karaf.version>4.0.5</karaf.version>
        <karaf.etc.path>${karaf.path}/etc</karaf.etc.path>
        <karaf.bin.path>${karaf.path}/bin</karaf.bin.path>
        <karaf.deploy.path>${karaf.path}/deploy</karaf.deploy.path>
        <maven.version>3.3.9</maven.version>
        <maven.conf.path>${maven.path}/conf</maven.conf.path>
        <!-- Database settings -->
        <dbunit.dataTypeFactoryName>org.dbunit.ext.mysql.MySqlDataTypeFactory</dbunit.dataTypeFactoryName>
        <dbunit.operation.type>CLEAN_INSERT</dbunit.operation.type>
        <jdbc.groupId>mysql</jdbc.groupId>
        <jdbc.artifactId>mysql-connector-java</jdbc.artifactId>
        <jdbc.version>5.1.22</jdbc.version>
        <jdbc.driverClassName>com.mysql.jdbc.Driver</jdbc.driverClassName>
        <jdbc.url>jdbc:mysql://localhost/${db.name}?createDatabaseIfNotExist=true&amp;amp;useUnicode=true&amp;amp;characterEncoding=utf-8&amp;amp;autoReconnect=true</jdbc.url>
        <jdbc.username>root</jdbc.username>
        <jdbc.password>root</jdbc.password>
        <db.name>kalix</db.name>

        <!--plugin version-->
        <!--<maven-antrun-plugin.version>1.7</maven-antrun-plugin.version>-->
        <maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
        <maven-bundle-plugin.version>3.0.1</maven-bundle-plugin.version>
        <maven-compiler-plugin.version>3.5.1</maven-compiler-plugin.version>
        <maven-dependency-plugin.version>2.10</maven-dependency-plugin.version>
        <maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
        <maven-install-plugin.version>2.5.2</maven-install-plugin.version>
        <maven-pax-plugin.version>1.5</maven-pax-plugin.version>
        <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
        <maven-source-plugin.version>3.0.0</maven-source-plugin.version>
        <maven-surefire-plugin.version>2.18.1</maven-surefire-plugin.version>
        <maven-site-plugin.version>3.5</maven-site-plugin.version>
        <openjpa-maven-plugin.version>2.4.0</openjpa-maven-plugin.version>
        <openjpa.version>2.4.0.Release</openjpa.version>

        <depends-maven-plugin.version>1.3.1</depends-maven-plugin.version>
        <build-helper-maven-plugin.version>1.10</build-helper-maven-plugin.version>
        <exec-maven-plugin.version>1.4.0</exec-maven-plugin.version>
        <hibernate3-maven-plugin.version>3.0</hibernate3-maven-plugin.version>
        <yuicompressor-maven-plugin.version>1.4.0</yuicompressor-maven-plugin.version>
        <native2ascii-maven-plugin.version>1.0-beta-1</native2ascii-maven-plugin.version>

        <cglib.range>[2,3)</cglib.range>
        <!-- Aries Blueprint Versions -->
        <ariesBlueprintAnnotationApiVersion>1.0.0</ariesBlueprintAnnotationApiVersion>
        <ariesBlueprintAnnotationImplVersion>1.0.0</ariesBlueprintAnnotationImplVersion>
        <log4j.version>1.2.17</log4j.version>
        <ant.contrib.version>20020829</ant.contrib.version>

        <!--bundle child property-->
        <bundle.symbolicName>must_define_in_child_module</bundle.symbolicName>
        <bundle.namespace>${bundle.symbolicName}</bundle.namespace>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- fabric8 property-->
        <fabric8.maven.plugin.version>3.0.33</fabric8.maven.plugin.version>
        <fabric8.version>2.2.142</fabric8.version>


        <dockerimage>${docker.registryPrefix}fabric8/${project.artifactId}:${project.version}</dockerimage>
        <docker.image>${dockerimage}</docker.image>
        <maven.compiler.target>1.7</maven.compiler.target>
        <docker.from>fabric8/java</docker.from>
        <docker.port.container.jolokia>8778</docker.port.container.jolokia>
        <fabric8.label.group>quickstarts</fabric8.label.group>
        <camel.version>2.15.2</camel.version>
        <docker.env.MAIN>org.apache.camel.cdi.Main</docker.env.MAIN>
        <version.compiler.plugin>2.3.1</version.compiler.plugin>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <docker.assemblyDescriptorRef>artifact-with-dependencies</docker.assemblyDescriptorRef>
        <maven.compiler.source>1.7</maven.compiler.source>
        <docker.maven.plugin.version>0.11.3</docker.maven.plugin.version>
    </properties>

    <dependencyManagement>
        <dependencies>
            <!-- import fabric8 platform bom first -->
            <dependency>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-project-bom-with-platform-deps</artifactId>
                <version>${fabric8.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <reporting>
    <plugins>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <version>2.10.3</version>
        <configuration>
          <detectLinks>true</detectLinks>
          <detectJavaApiLink>true</detectJavaApiLink>
          <linksource>true</linksource>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*-rest.xml</include>
                </includes>
            </resource>
        </resources>
        <extensions>
      <extension>
        <groupId>org.apache.maven.wagon</groupId>
        <artifactId>wagon-webdav-jackrabbit</artifactId>
        <version>2.10</version>
      </extension>
    </extensions>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-scm-plugin</artifactId>
                <version>1.8.1</version>
                <configuration>
                    <tag>${project.artifactId}-${project.version}</tag>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>${exec-maven-plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>exec</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <executable>karaf.bat</executable>
                    <!-- optional -->
                    <workingDirectory>${karaf.bin.path}</workingDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
            </plugin>
            <!--?js?css??????-->
            <!--<plugin>
                <groupId>net.alchim31.maven</groupId>
                <artifactId>yuicompressor-maven-plugin</artifactId>
                <version>${yuicompressor-maven-plugin.version}</version>
                <configuration>
                    <statistics>true</statistics>
                    <jswarn>false</jswarn>
                    <suffix>.min</suffix>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>compress</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>-->
            <plugin>
                <groupId>org.ops4j</groupId>
                <artifactId>maven-pax-plugin</artifactId>
                <version>${maven-pax-plugin.version}</version>
                <!--
                 | enable improved OSGi compilation support for the bundle life-cycle.
                 | to switch back to the standard bundle life-cycle, move this setting
                 | down to the maven-bundle-plugin section
                -->
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>${maven-bundle-plugin.version}</version>
                <extensions>true</extensions>
                <configuration>
                    <instructions>
                        <Bundle-SymbolicName>${bundle.symbolicName}</Bundle-SymbolicName>
                        <Bundle-Version>${project.version}</Bundle-Version>
                        <Export-Package>${bundle.namespace}.*;version="${project.version}"</Export-Package>
                        <Import-Package>*</Import-Package>
                        <_include>-osgi.bnd</_include>
                    </instructions>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${maven-surefire-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven-site-plugin.version}</version>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven-compiler-plugin.version}</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <debug>true</debug>
                    <optimize>true</optimize>
                    <showDeprecation>true</showDeprecation>
                    <showWarnings>true</showWarnings>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>${maven-source-plugin.version}</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>jar-no-fork</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>${maven-deploy-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-install-plugin</artifactId>
                <version>${maven-install-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>${maven-antrun-plugin.version}</version>
                <executions>
                    <execution>
                        <id>deploy</id>
                        <phase>install</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                                <if>
                                    <equals arg1="${project.packaging}" arg2="bundle" />
                                    <then>
                                        <if>
                                            <available file="target/${project.artifactId}-${project.version}.jar" />
                                            <then>
                                                <if>
                                                    <available file="${karaf.deploy.path}" type="dir"></available>
                                                    <then>
                                                        <copy file="target/${project.artifactId}-${project.version}.jar" todir="${karaf.deploy.path}" />
                                                    </then>
                                                    <else>
                                                        <echo>Karaf deploy path does not exist</echo>
                                                    </else>
                                                </if>
                                            </then>
                                            <else>
                                                <echo>The file does not exist</echo>
                                            </else>
                                        </if>
                                    </then>
                                </if>
                                <if>
                                    <available file="${maven.conf.path}" type="dir"></available>
                                    <then>
                                        <if>
                                            <available file="src/main/resources/settings.xml" />
                                            <then>
                                                <copy file="src/main/resources/settings.xml" todir="${maven.conf.path}" />
                                            </then>
                                        </if>
                                    </then>
                                </if>
                                <if>
                                    <equals arg1="${project.artifactId}" arg2="framework-core-etc" />
                                    <then>
                                        <if>
                                            <available file="${karaf.etc.path}" type="dir"></available>
                                            <then>
                                                <copy todir="${karaf.etc.path}">
                                                    <fileset dir="src/main/resources" />
                                                </copy>
                                            </then>
                                            <else>
                                                <echo>Karaf deploy path does not exist</echo>
                                            </else>
                                        </if>
                                    </then>
                                </if>
                            </target>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>${ant.contrib.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.apache.servicemix.tooling</groupId>
                <artifactId>depends-maven-plugin</artifactId>
                <version>${depends-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>${build-helper-maven-plugin.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>hibernate3-maven-plugin</artifactId>
                <version>${hibernate3-maven-plugin.version}</version>
                <configuration>
                    <hibernatetool>
                        <jpaconfiguration />
                    </hibernatetool>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>${fabric8.maven.plugin.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>resource</goal>
                            <!--<goal>build</goal>-->
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jolokia</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>${docker.maven.plugin.version}</version>
                <configuration>
                    <images>
                        <image>
                            <name>${docker.image}</name>
                            <build>
                                <from>${docker.from}</from>
                                <assembly>
                                    <descriptorRef>${docker.assemblyDescriptorRef}</descriptorRef>
                                </assembly>
                                <env>
                                    <MAIN>${docker.env.MAIN}</MAIN>
                                </env>
                            </build>
                        </image>
                    </images>
                </configuration>
            </plugin>
        </plugins>
        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.openjpa</groupId>
                    <artifactId>openjpa-maven-plugin</artifactId>
                    <version>${openjpa-maven-plugin.version}</version>
                    <configuration>
                        <includes>**/entities/*.class</includes>
                        <addDefaultConstructor>true</addDefaultConstructor>
                        <enforcePropertyRestrictions>true</enforcePropertyRestrictions>
                        <persistenceXmlFile>${project.build.outputDirectory}/META-INF/persistence-jpa.xml</persistenceXmlFile>
                    </configuration>
                    <executions>
                        <execution>
                            <id>enhancer</id>
                            <phase>process-classes</phase>
                            <goals>
                                <goal>enhance</goal>
                            </goals>
                        </execution>
                    </executions>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.openjpa</groupId>
                            <artifactId>openjpa</artifactId>
                            <version>${openjpa.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>native2ascii-maven-plugin</artifactId>
                    <version>${native2ascii-maven-plugin.version}</version>
                </plugin>

            </plugins>
        </pluginManagement>
    </build>
    <distributionManagement>
        <repository>
            <id>nexus</id>
            <name>private-nexus-library-releases</name>
            <url>http://nexus.apps.kalix.com/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>private-nexus-library-snapshots</id>
            <name>private-nexus-library-snapshots</name>
            <url>http://nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
        <site>
      <id>website</id>
      <url>dav:http://content-repository/sites/${project.groupId}/${project.artifactId}/${project.version}</url>
    </site>
    </distributionManagement>
</project>
